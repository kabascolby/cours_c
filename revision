char *ft_strcpy(char *dest, char *src)
{
    int i;

    i= 0;
    while (src[i])
    {
        dest[i] = src[i];
        i++;
    }
    dest[i] = src[i]
    return (dest);
}

void ft_swap( int *a, int *b)
{
    int c;

    c = *b;
    *b = *a;
    *a = c;
}

void ft_putstr (char *str)
{
    int i;

    i= 0;
    while (str[i] != 0)
    {
        write(1, &str[i], 1);
        i++;
    }
}



void	ft_putnbr(int nb)
{
	if (nb < 0)
	{
		ft_putchar('-');
		nb = nb * (-1);
	}
	if (nb >= 10)
	{
		ft_putnbr(nb / 10);
		ft_putnbr(nb % 10);
	}
	else
	{
		ft_putchar(nb + '0');
	}
}



/*   ft_print_numbers.c                                 :+:      :+:    :+:   */
â€¦	
int		ft_putchar(char c);
	
	void	ft_print_numbers(void)
	{
		char digit;
	
		digit = '0';
		while (digit <= '9')
		{
			ft_putchar(digit);
			digit++;
		}
	}


char *ft_strim(char *a)
{
    int j;
    while (a[0] != 32 && a[0] >= 1)
    { 
        j = 1;
        while(a[j] != 0)
        {
            a[j -1] = a[j];
            j++;
        }        
        a[j - 1] = '\0';
    }

    return (a);
}

void ft_print (char *a)
{
    int i;
    int space;
    
    i = 0;
    space = 0;

    while(a[i] != '\0')
    {
        if (a[1] <= 32 && a[i] >= 1)
        {
            space = 1;
        }
        else
        {
            if(space)
            {
                space = 0;
                write(1, "   ", 3);
            }
            write(1, &a[i], 1);
            space = 0;
        }
        i++;
    }

}

int main(int argc, char **argv)
{
    if(argc == 2 && argv[1][0] != 0)
    {
        ft_print(ft_strim(argv[1]));
    }
    write(1, "\n", 1)
}

mes sujets 

    inter  
    reverse_bits
    print_bits  
    do_op                       (no)
    swap_bits
    wdmatch
    ulstr                       (ok)
    rot_13                      (ok)
    ft_strcapitalize            (ok)
    alpha_mirror
    rostring
    rotone                      (ok) 
    search_and_replace
    aff_a
    last_word
    max
    ft_strdup
    ft_putstr                   (ok)
    only_z                      (ok)
    ft_djamal                   (ok)