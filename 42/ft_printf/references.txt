https://www.lix.polytechnique.fr/~liberti/public/computing/prog/c/C/FUNCTIONS/format.html
https://www.notion.so/Starfleet-2cc4eac8acdc4bbd83375e6777af1840 printf documentation


*	Flags	Minimum field Width	.precision Maximum field width	Length	Convertion Type*	

flags: # 0 - + _

1) '#' : prefixe inserted
arious uses:
	  %#o (Octal) 0 prefix inserted.  (by prefixing a 0 if	it was not zero	already)
	  %#x (Hex)   0x prefix added to non-zero values.| For x and X conversions, a nonzero result has the string "0x" 
	  %#X (Hex)   0X prefix added to non-zero values.| (or "0X" for Xconversions)  prepended  to  it.
	  %#e         Always show the decimal point.
	  %#E         Always show the decimal point.
	  %#f         Always show the decimal point.
	  %#g         Always show the decimal point trailing 
	  	      zeros not removed.
	  %#G         Always show the decimal point trailing
		      zeros not removed.

    the result will always  contain  a  decimal	point, even  if	no digits follow it (normally,
    a decimal point appears in the results of	those conversions only if  a  digit  follows).
    For g and	G conversions, trailing zeros are not removed from the result as they would otherwise be.  
    For other  conversions,  the result is	undefined. "error if the conversion is not those type"
    
2) '0' - Field is padded with 0's instead of blanks. For d, i, o, u, x, X, a, A, e, E, f, F, g, and G conversions.
If a precision is given with  a numeric conversion (d, i, o, u, x, and X), the 0 flag is ignored.
For other conversions, the behavior is undefined. If the 0 and - flags both appear, the 0 flag is ignored.

3) '-' Left justify
Left-align the output of this placeholder. (The default is to right-align the output.)
A - overrides a	0 if both are given. ex: printf("%-50dhello\n", 12789); => 31f5                                              hello

4) ' ' (a  space)  A  blank should be left before a positive number(or empty string) produced by	a signed conversion.
ex: printf("% dhello\n", 12789); =>" 12789hello";
ex: printf("% dhello\n", -12789); =>"12789hello"; if a number is negative no space;

5) '+'  A	sign (+	or -) should always be placed before a number produced by a signed conversion.  By default a sign is used only for
negative numbers.  A+ overrides a space if both are	used.



















((*s == '%' && *(s + 1) == '%' ) ? ((s = (s + 2)), ft_addnode("%", 1, &head)): NULL);